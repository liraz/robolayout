<config>
  <executableName>${app.executable}</executableName>
  <mainClass>${app.mainclass}</mainClass>

  <os>ios</os>
  <arch>thumbv7</arch>
  <resources>
    <resource>
      <directory>resources</directory>
    </resource>
    <resource>
      <directory>src/main/resources</directory>
      <includes>
        <include>**</include>
      </includes>
    </resource>
  </resources>

  <target>ios</target>
  <iosInfoPList>Info.plist.xml</iosInfoPList>
  <forceLinkClasses>

    <!--<pattern>SQLite.JDBCDriver</pattern>
    <pattern>SQLite.JDBC2z.JDBCConnection</pattern>-->

    <!-- Retrofit linking -->
    <pattern>java.util.logging.ConsoleHandler</pattern>
    <pattern>java.util.logging.SimpleFormatter</pattern>
    <pattern>com.android.org.conscrypt.**</pattern>
    <pattern>org.apache.harmony.security.provider.cert.DRLCertFactory</pattern>
    <pattern>org.apache.harmony.security.provider.crypto.CryptoProvider</pattern>
    <pattern>com.android.okhttp.HttpHandler</pattern>
    <pattern>com.android.okhttp.HttpsHandler</pattern>

    <!-- We still need KeyStore.BKS and CertPathValidator.PKIX from BouncyCastle -->
    <pattern>com.android.org.bouncycastle.jce.provider.BouncyCastleProvider</pattern>
    <pattern>com.android.org.bouncycastle.jcajce.provider.keystore.BC$Mappings</pattern>
    <pattern>com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi</pattern>
    <pattern>com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$Std</pattern>
    <pattern>com.android.org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi</pattern>
    <!-- Use AndroidDigestFactoryOpenSSL as AndroidDigestFactory implementation -->
    <pattern>com.android.org.bouncycastle.crypto.digests.AndroidDigestFactoryOpenSSL</pattern>

    <pattern>retrofit.**</pattern>

    <!-- rxrobovm -->
    <pattern>org.robovm.apple.foundation.NSBlockOperation</pattern>
    <pattern>org.robovm.apple.foundation.NSOperationQueue</pattern>
    <pattern>rx.ios.schedulers.**</pattern>
    <pattern>rx.**</pattern>

    <!-- core dynamic class -->
    <pattern>org.lirazs.robolayout.core.widget.**</pattern>
    <!--<pattern>org.lirazs.robolayout.core.test.**</pattern>-->

  </forceLinkClasses>
  <!--<libs>
    <lib>lib/libiOSPlot.a</lib>
  </libs>-->
  <frameworks>
    <framework>CoreGraphics</framework>
  </frameworks>
</config>
